Qualcomm Synopsys 28nm Femto phy controller
===========================================

Synopsys 28nm femto phy controller supports LS/FS/HS usb connectivity on
Qualcomm chipsets.

Required properties:

- compatible:
    Value type: <string>
    Definition: Should contain "qcom,qcs404-usb-hsphy".

- reg:
    Value type: <prop-encoded-array>
    Definition: USB PHY base address and length of the register map.

- #phy-cells:
    Value type: <u32>
    Definition: Should be 0. See phy/phy-bindings.txt for details.

- clocks:
    Value type: <prop-encoded-array>
    Definition: See clock-bindings.txt section "consumers". List of
		three clock specifiers for reference, phy core and
		sleep clocks.

- clock-names:
    Value type: <string>
    Definition: Names of the clocks in 1-1 correspondence with the "clocks"
		property. Must contain "ref", "phy" and "sleep".

- resets:
    Value type: <prop-encoded-array>
    Definition: See reset.txt section "consumers". PHY reset specifiers
		for phy core and POR resets.

- reset-names:
    Value type: <string>
    Definition: Names of the resets in 1-1 correspondence with the "resets"
		property. Must contain "phy" and "por".

- vdd-supply:
    Value type: <phandle>
    Definition: phandle to the regulator VDD supply node.

- vdda1p8-supply:
    Value type: <phandle>
    Definition: phandle to the regulator 1.8V supply node.

- vdda3p3-supply:
    Value type: <phandle>
    Definition: phandle to the regulator 3.3V supply node.

- qcom,vdd-voltage-level:
    Value type: <prop-array>
    Definition: This is a list of three integer values <no min max> where
		each value corresponding to voltage corner in uV.

Optional properties:

- qcom,init-seq:
    Value type: <u32 array>
    Definition: Should contain a sequence of <offset value delay> tuples to
                program 'value' into phy register at 'offset' with 'delay'
		in us afterwards.

Optional child nodes:

- The link to the USB connector should be modeled using the OF graph bindings
  specified in bindings/graph.txt.

Example:

	phy@7a000 {
		compatible = "qcom,qcs404-usb-hsphy";
		reg = <0x7a000 0x200>;
		#phy-cells = <0>;
		clocks = <&rpmcc RPM_SMD_LN_BB_CLK>,
			 <&gcc GCC_USB_HS_PHY_CFG_AHB_CLK>,
			 <&gcc GCC_USB2A_PHY_SLEEP_CLK>;
		clock-names = "ref", "phy", "sleep";
		resets = <&gcc GCC_USB_HS_PHY_CFG_AHB_BCR>,
			 <&gcc GCC_USB2A_PHY_BCR>;
		reset-names = "phy", "por";
		vdd-supply = <&vreg_l4_1p2>;
		vdda1p8-supply = <&vreg_l5_1p8>;
		vdda3p3-supply = <&vreg_l12_3p3>;
		qcom,vdd-voltage-level = <0 1144000 1200000>;
		qcom,init-seq = <0xc0 0x01 0>,
				<0xe8 0x0d 0>,
				<0x74 0x12 0>,
				<0x98 0x63 0>,
				<0x9c 0x03 0>,
				<0xa0 0x1d 0>,
				<0xa4 0x03 0>,
				<0x8c 0x23 0>,
				<0x78 0x08 0>,
				<0x7c 0xdc 0>,
				<0x90 0xe0 20>,
				<0x74 0x10 0>,
				<0x90 0x60 0>;

		port {
			ep_usb_phy: endpoint {
				remote-endpoint = <&ep_usb_con>;
			};
		};
	};
